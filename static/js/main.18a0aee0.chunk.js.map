{"version":3,"sources":["BooksAPI.js","List.js","SearchPage.js","MyBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","List","_this$props","this","props","moveBookToShelf","react_default","a","createElement","className","src","imageLinks","thumbnail","alt","title","value","onChange","event","target","disabled","authors","Component","SearchPage","state","fetchedBooks","fetchBooks","trim","BooksAPI","map","_this","pbook","Array","setState","Link","to","type","placeholder","src_List","key","MyBooks","filter","BooksApp","getMyBooks","console","log","_this2","_this3","Route","exact","path","render","src_MyBooks","src_SearchPage","ReactDOM","HashRouter","src_App","document","getElementById"],"mappings":"8PACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAaNS,EAAS,SAACC,EAAMC,GAAP,OACpBC,MAAK,GAAAC,OAAId,EAAJ,WAAAc,OAAiBH,EAAKI,IAAM,CAC/BC,OAAQ,MACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEV,YACtBW,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERC,EAAS,SAACC,GAAD,OACpBd,MAAK,GAAAC,OAAId,EAAJ,WAAkB,CACrBgB,OAAQ,OACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEK,YACtBJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,iCCJRC,mLA7BF,IAAAC,EAE8BC,KAAKC,MAAhCJ,EAFHE,EAEGF,MAAOK,EAFVH,EAEUG,gBAEf,OACIC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKV,EAAMW,WAAaX,EAAMW,WAAWC,UAAY,iBAAkBC,IAAG,iBAAA5B,OAAmBe,EAAMc,UAE5GR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQO,MAAOf,EAAMjB,MAAQiB,EAAMjB,MAAQ,OAAQiC,SAAU,SAACC,GAAD,OAAWZ,EAAgBL,EAAOiB,EAAMC,OAAOH,SACxGT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,OAAOI,UAAQ,GAA7B,cACAb,EAAAC,EAAAC,cAAA,UAAQO,MAAM,oBAAd,qBACAT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,cAAd,gBACAT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,QAAd,QACAT,EAAAC,EAAAC,cAAA,UAAQO,MAAM,QAAd,WAIZT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcT,EAAMc,OACnCR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBT,EAAMoB,kBA7BtCC,aC6DJC,6MAnDXC,MAAQ,CACJC,aAAc,MAKlBC,WAAa,SAACR,GACV,IAAMnB,EAAQmB,EAAMC,OAAOH,MAAMW,OAE7B5B,GACA6B,EAAgB7B,GAAOJ,KAAK,SAACM,GACzBA,EAAM4B,IAAI,SAAC9C,GACP,OAAO+C,EAAKzB,MAAMJ,MAAM4B,IAAI,SAACE,GAC3B,OAAGA,EAAM5C,KAAOJ,EAAKI,GACZJ,EAAKC,MAAQ+C,EAAM/C,MAEnB,WAIZiB,aAAiB+B,MAAOF,EAAKG,SAAS,CAACR,aAAcxB,IAAgB6B,EAAKG,SAAS,CAACR,aAAc,gFAKvG,IAEEnB,EAAoBF,KAAKC,MAAzBC,gBAER,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMxB,UAAU,eAAeyB,GAAG,KAAlC,QACA5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,SAAO2B,KAAK,OAAOC,YAAY,4BAA4BpB,SAAUb,KAAKsB,eAGlFnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTN,KAAKoB,MAAMC,aAAaI,IAAI,SAAA9C,GAAI,OAC7BwB,EAAAC,EAAAC,cAAC6B,EAAD,CAAMC,IAAOxD,EAAKI,GAAIc,MAAOlB,EAAMuB,gBAAiBA,iBAhD3DgB,aC8DVkB,mLAxDD,IAAArC,EAE4BC,KAAKC,MAA/BJ,EAFFE,EAEEF,MAAOK,EAFTH,EAESG,gBAEf,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,yBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTT,EAAMwC,OAAO,SAACxC,GAAD,MAA2B,qBAAhBA,EAAMjB,QAA8B6C,IAAI,SAAC5B,GAAD,OAC7DM,EAAAC,EAAAC,cAAC6B,EAAD,CAAOC,IAAKtC,EAAMd,GAAIc,MAAOA,EAAOK,gBAAiBA,QAOjEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTT,EAAMwC,OAAO,SAACxC,GAAD,MAA2B,eAAhBA,EAAMjB,QAAwB6C,IAAI,SAAC5B,GAAD,OACvDM,EAAAC,EAAAC,cAAC6B,EAAD,CAAOC,IAAKtC,EAAMd,GAAIc,MAAOA,EAAOK,gBAAiBA,QAOjEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTT,EAAMwC,OAAO,SAACxC,GAAD,MAA2B,SAAhBA,EAAMjB,QAAkB6C,IAAI,SAAC5B,GAAD,OACjDM,EAAAC,EAAAC,cAAC6B,EAAD,CAAOC,IAAKtC,EAAMd,GAAIc,MAAOA,EAAOK,gBAAiBA,WAU7EC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAMC,GAAG,WAAT,sBAxDGb,aC+CRoB,6MA3CXlB,MAAQ,CACJvB,MAAO,MAmBXK,gBAAkB,SAACvB,EAAMC,GACrB4C,EAAgB7C,EAAMC,GAAOW,KAAK,kBAAMmC,EAAKa,eACzCC,QAAQC,IAAR,QAAA3D,OAAoBH,EAAKgC,MAAzB,uBAAA7B,OAAoDF,EAApD,+FAfJoB,KAAKuC,kDAGI,IAAAG,EAAA1C,KJCfnB,MAAK,GAAAC,OAAId,EAAJ,UAAiB,CAAEO,YACrBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,QIFGN,KAAK,SAACM,GACpB6C,EAAKb,SAAS,CAAChC,UACf2C,QAAQC,IAAI,eAAgBC,EAAKtB,MAAMvB,0CAYtC,IAAA8C,EAAA3C,KAEL,OACIG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,IAAIC,OAAU,kBAC9B5C,EAAAC,EAAAC,cAAC2C,EAAD,CAASnD,MAAO8C,EAAKvB,MAAMvB,MAAOK,gBAAiByC,EAAKzC,qBAI5DC,EAAAC,EAAAC,cAACuC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,UAAUC,OAAU,kBACpC5C,EAAAC,EAAAC,cAAC4C,EAAD,CAAYpD,MAAO8C,EAAKvB,MAAMvB,MAAOK,gBAAiByC,EAAKzC,6BArCxDgB,6BCDvBgC,IAASH,OACL5C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,KAAYhD,EAAAC,EAAAC,cAAC+C,EAAD,OACZC,SAASC,eAAe","file":"static/js/main.18a0aee0.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from \"react\"\nimport PropTypes from \"prop-types\";\n\nclass List extends Component {\n\n    static propTypes = {\n        books: PropTypes.object.isRequired,\n        moveBookToShelf: PropTypes.func.isRequired\n    };\n\n    render() {\n\n        const { books, moveBookToShelf } = this.props;\n\n        return (\n            <li>\n                <div className=\"book\">\n                    <div className=\"book-top\">\n                        <div className=\"book-cover\">\n                            <img src={books.imageLinks ? books.imageLinks.thumbnail : \"No image found\"} alt={`book cover of ${books.title}`}/>\n                        </div>\n                        <div className=\"book-shelf-changer\">\n                            <select value={books.shelf ? books.shelf : \"none\"} onChange={(event) => moveBookToShelf(books, event.target.value)}>\n                                <option value=\"move\" disabled>Move to...</option>\n                                <option value=\"currentlyReading\">Currently Reading</option>\n                                <option value=\"wantToRead\">Want to Read</option>\n                                <option value=\"read\">Read</option>\n                                <option value=\"none\">None</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"book-title\">{books.title}</div>\n                    <div className=\"book-authors\">{books.authors}</div>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default List","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport * as BooksAPI from \"./BooksAPI\"\nimport List from \"./List\";\nimport { PropTypes } from \"prop-types\"\n\nclass SearchPage extends Component {\n\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        moveBookToShelf: PropTypes.func.isRequired\n    };\n\n    state = {\n        fetchedBooks: []\n    };\n\n    /* Searching for books */\n\n    fetchBooks = (event) => {\n        const query = event.target.value.trim();\n\n        if (query) {\n            BooksAPI.search(query).then((books) => {\n                books.map((book) => {\n                    return this.props.books.map((pbook) => {\n                      if(pbook.id === book.id){\n                        return book.shelf = pbook.shelf\n                      } else {\n                        return \"none\"\n                      }\n                    })\n                }); //cant think of any other way to apply the cerrect shelf value to each book besides checing id.\n                if(books instanceof Array){this.setState({fetchedBooks: books})} else { this.setState({fetchedBooks: []})};\n            });\n        }\n    };\n\n    render () {\n\n        const { moveBookToShelf } = this.props;\n\n        return (\n            <div>\n                <div className=\"search-books\">\n                    <div className=\"search-books-bar\">\n                        <Link className=\"close-search\" to=\"/\">Home</Link>\n                        <div className=\"search-books-input-wrapper\">\n                            <input type=\"text\" placeholder=\"Search by title or author\" onChange={this.fetchBooks}/>\n                        </div>\n                    </div>\n                    <div className=\"search-books-results\">\n                        <ol className=\"books-grid\">\n                            {this.state.fetchedBooks.map(book => (\n                                <List key = {book.id} books={book} moveBookToShelf={moveBookToShelf}/>\n                            ))}\n                        </ol>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchPage\n","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport List from \"./List\"\nimport PropTypes from \"prop-types\";\n\nclass MyBooks extends  Component {\n\n    static propTypes = {\n        books: PropTypes.array.isRequired,\n        moveBookToShelf: PropTypes.func.isRequired\n    };\n\n    render () {\n\n        const { books, moveBookToShelf} = this.props;\n\n        return (\n            <div>\n                <div className=\"list-books-title\">\n                    <h1>My Library</h1>\n                </div>\n                <div className=\"list-books-content\">\n                    <div>\n                        <div className=\"bookshelf\">\n                            <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                            <div className=\"bookshelf-books\">\n                                <ol className=\"books-grid\">\n                                    {books.filter((books) => books.shelf === \"currentlyReading\").map((books) =>\n                                        <List  key={books.id} books={books} moveBookToShelf={moveBookToShelf}>\n\n                                        </List>\n                                    )}\n                                </ol>\n                            </div>\n\n                            <h2 className=\"bookshelf-title\">Want To Read</h2>\n                            <div className=\"bookshelf-books\">\n                                <ol className=\"books-grid\">\n                                    {books.filter((books) => books.shelf === \"wantToRead\").map((books) =>\n                                        <List  key={books.id} books={books} moveBookToShelf={moveBookToShelf}>\n\n                                        </List>\n                                    )}\n                                </ol>\n                            </div>\n\n                            <h2 className=\"bookshelf-title\">Read</h2>\n                            <div className=\"bookshelf-books\">\n                                <ol className=\"books-grid\">\n                                    {books.filter((books) => books.shelf === \"read\").map((books) =>\n                                        <List  key={books.id} books={books} moveBookToShelf={moveBookToShelf}>\n\n                                        </List>\n                                    )}\n                                </ol>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n                <div className=\"open-search\">\n                    <Link to=\"/search\">Add books</Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MyBooks\n","import React, { Component } from 'react'\nimport * as BooksAPI from './BooksAPI'\nimport './App.css'\nimport { Route} from \"react-router-dom\"\nimport SearchPage from \"./SearchPage\"\nimport MyBooks from \"./MyBooks\";\n\nclass BooksApp extends Component {\n\n    state = {\n        books: []\n    };\n\n    /* Fetching books from the api */\n\n    componentDidMount() {\n        this.getMyBooks();\n    };\n\n    getMyBooks() {\n        BooksAPI.getAll().then((books) => {\n            this.setState({books});\n            console.log(\"My Books are\", this.state.books)\n        });\n\n    };\n\n    /* Moving a book to a shelf */\n\n    moveBookToShelf = (book, shelf) => {\n        BooksAPI.update(book, shelf).then(() => this.getMyBooks());\n            console.log(`Book ${book.title} has been moved to ${shelf} shelf`);\n    };\n    \n    render() {\n\n        return (\n            <div>\n                <Route exact path = \"/\" render = {() => (\n                    <MyBooks books={this.state.books} moveBookToShelf={this.moveBookToShelf}/>\n                )}\n                />\n\n                <Route exact path = \"/Search\" render = {() => (\n                    <SearchPage books={this.state.books} moveBookToShelf={this.moveBookToShelf}/>\n                )}\n                />\n            </div>\n        )\n    }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { HashRouter } from \"react-router-dom\"\n\nReactDOM.render(\n    <HashRouter><App /></HashRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}